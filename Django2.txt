

1.配置
①settings.py文件中INSTALLED_APPS中写入创建的app的name
②也可以导入apps.py文件中的APPCONFIG下的name属性

2.模型
在models.py文件中定义class 模型名称

继承models.Model

db_tables:定义数据库中的表名称

3. 迁移
python manage.py makemigrations

python manage.py migrate

4. 保持数据

stu = Student()
stu.name = 'xxx'
stu.save()

5. 创建超级管理员的账号密码
python manage.py createsuperuser

6. 
ORM 对象关系映射，翻译机

7. 模型字段

CharField: 字符串
max_length:长度
BooleanField：布尔类型 1 0
DateField: 年月日，日期
auto_now_add： 第一次创建的时候赋值
auto_now：每次修改的时候赋值
DateTimeField：年月日 时分秒
auto_now_add
auto_now

AutoField：自动增长

DecimalField： 
models.DecimalField(max_digits=3, decimal_places=1)
max_digits    ：总位数
decimal_places：小数后多少位

TextField   ：存文本信息
IntegerField：整数
FloatField  ：浮点
 
 FileField：文件上传字段
 ImageField：上传图片
 upload_to="" 指定上传图片的路径


 8. 模型参数
 default: 默认
 null  ：设置是否为空，针对数据库中该字段是否可以为空
 blank ：设置是否为空，针对表单提交该字段是否可以为空

 primary_key：创建主键
 unique：唯一

 9.修改字段名
 alter table table_name change 原名称 修改后名称 类型

 10.objects对象
 通过模型.objects来实现数据的CRUD操作

 11. 获取所有学生
 select * from student;
 模型.objects.all()

 12.获取所有女生的信息
 filter(过滤条件)
 get(过滤条件)

 区别：
 get：返回一个满足条件的对象，没有满足条件的则直接报DoesNotExit的异常，
 如果查询结果有多个数据的话，就报MulitiObjectsReturned

 filter（）：返回满足条件的结果 

 first（）：返回第一条数据

 last（）：返回最后一条数据

 count（）：求和

 gt gte：大于  大于等于
 lt lte： 小于  小于等于

 13. F() / Q()

 from django.db.models import F，Q
 F用来取值，Q用来取后面的条件

